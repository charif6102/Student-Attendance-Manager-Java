/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.rmiprjclient;
import com.prjrmi.dao.StudentManager;
import com.prjrmi.model.Grade;
import com.prjrmi.model.Student;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.rmi.RemoteException;
import java.awt.BorderLayout;
/**
 *
 * @author abech
 */
public class SelectorPanel extends javax.swing.JPanel {

    /**
     * Creates new form SelectorPanel
     */
    final private StudentManager stub;
    public SelectorPanel(StudentManager stub) {
        this.stub=stub;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        comboPanel = new javax.swing.JPanel();
        selectionLabel = new javax.swing.JLabel();
        listClassromCombo = new javax.swing.JComboBox<>();
        studentListPanel = new javax.swing.JPanel();
        studentSummayPanel = new javax.swing.JPanel();
        nbrStudentLabel = new javax.swing.JLabel();
        nbrStudentField = new javax.swing.JTextField();
        averageGradeLabel = new javax.swing.JLabel();
        averageGradeField = new javax.swing.JTextField();
        minAverageLabel = new javax.swing.JLabel();
        minGradeField = new javax.swing.JTextField();
        maxGradesLabel = new javax.swing.JLabel();
        maxGradesField = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        addStudentButton = new javax.swing.JButton();
        tableScrollPane = new javax.swing.JScrollPane();
        studentTableModel = new DefaultTableModel();
        studentTableModel.setColumnIdentifiers(new String[]{"ID", "First Name", "Last Name", "Class Name", "Average Grade"});
        studentTable = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 255, 204));

        comboPanel.setBackground(new java.awt.Color(255, 255, 102));

        selectionLabel.setBackground(new java.awt.Color(255, 255, 204));
        selectionLabel.setText("Choose Classroom");

        listClassromCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "100", "200", "300", "400" }));
        listClassromCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listClassromComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout comboPanelLayout = new javax.swing.GroupLayout(comboPanel);
        comboPanel.setLayout(comboPanelLayout);
        comboPanelLayout.setHorizontalGroup(
            comboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comboPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(comboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listClassromCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(comboPanelLayout.createSequentialGroup()
                        .addComponent(selectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        comboPanelLayout.setVerticalGroup(
            comboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comboPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listClassromCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        selectionLabel.getAccessibleContext().setAccessibleName("selectionLabel");

        studentListPanel.setBackground(new java.awt.Color(255, 255, 204));

        studentSummayPanel.setBackground(new java.awt.Color(255, 255, 204));

        nbrStudentLabel.setText("Nbr. Students");

        averageGradeLabel.setText("Avg. Grades");

        minAverageLabel.setText("Min Grades");

        maxGradesLabel.setText("Max Grades");

        javax.swing.GroupLayout studentSummayPanelLayout = new javax.swing.GroupLayout(studentSummayPanel);
        studentSummayPanel.setLayout(studentSummayPanelLayout);
        studentSummayPanelLayout.setHorizontalGroup(
            studentSummayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentSummayPanelLayout.createSequentialGroup()
                .addGroup(studentSummayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nbrStudentLabel)
                    .addComponent(averageGradeLabel))
                .addGap(18, 18, 18)
                .addGroup(studentSummayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nbrStudentField, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(averageGradeField))
                .addGap(62, 62, 62)
                .addGroup(studentSummayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(studentSummayPanelLayout.createSequentialGroup()
                        .addComponent(minAverageLabel)
                        .addGap(18, 18, 18)
                        .addComponent(minGradeField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentSummayPanelLayout.createSequentialGroup()
                        .addComponent(maxGradesLabel)
                        .addGap(18, 18, 18)
                        .addComponent(maxGradesField)))
                .addGap(0, 789, Short.MAX_VALUE))
        );
        studentSummayPanelLayout.setVerticalGroup(
            studentSummayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentSummayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentSummayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nbrStudentLabel)
                    .addComponent(nbrStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minAverageLabel)
                    .addComponent(minGradeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(studentSummayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(averageGradeLabel)
                    .addComponent(averageGradeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxGradesLabel)
                    .addComponent(maxGradesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        buttonPanel.setBackground(new java.awt.Color(255, 255, 255));

        addStudentButton.setBackground(new java.awt.Color(0, 204, 51));
        addStudentButton.setText("Add Student");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addStudentButton)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addStudentButton)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        tableScrollPane.setBackground(new java.awt.Color(255, 255, 204));

        studentTable.setBackground(new java.awt.Color(0, 204, 102));
        studentTable.setModel(studentTableModel);
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        tableScrollPane.setViewportView(studentTable);

        javax.swing.GroupLayout studentListPanelLayout = new javax.swing.GroupLayout(studentListPanel);
        studentListPanel.setLayout(studentListPanelLayout);
        studentListPanelLayout.setHorizontalGroup(
            studentListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentListPanelLayout.createSequentialGroup()
                .addGroup(studentListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableScrollPane)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(studentListPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(studentSummayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(296, 296, 296))
        );
        studentListPanelLayout.setVerticalGroup(
            studentListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentListPanelLayout.createSequentialGroup()
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(studentSummayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
       new AddStudent(stub).setVisible(true);
    }//GEN-LAST:event_addStudentButtonActionPerformed

    private void listClassromComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listClassromComboActionPerformed
         fetchAndDisplayStudents();
    }//GEN-LAST:event_listClassromComboActionPerformed

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
       if (evt.getClickCount() != 0) {
           int rowId = studentTable.rowAtPoint(evt.getPoint());
           Integer studentId = (Integer) studentTableModel.getValueAt(rowId, 0);
           System.out.println("StudentId = " + studentId);
           
          new DisplayStudentDetail(stub, studentId).setVisible(true);
          
         //  new GradePanel(stub,studentId).setVisible(true);
        
       
         // setVisible(true);
                    
                }
    }//GEN-LAST:event_studentTableMouseClicked

    
    private void fetchAndDisplayStudents() {
        try {
            String stdClassName = listClassromCombo.getSelectedItem().toString();
            List<Student> students = stub.getStudentsByStdClassName(stdClassName);
            studentTableModel.setRowCount(0); // Clear previous data
            double minGrade =0;
            double maxGrade =0;
            double totalGrades=0;
            for (Student student : students) {
                double averageGrade = calculateAverageGrade(student);
          
                if (averageGrade < minGrade){
                    minGrade = averageGrade;
                }
                
               if (averageGrade > maxGrade){
                    maxGrade = averageGrade;
                }
               
                totalGrades += averageGrade;
                studentTableModel.addRow(new Object[]{
                    student.getId(),
                    student.getFirstName(),
                    student.getLastName(),
                    student.getStdClassName(),
                    String.format("%.2f", averageGrade)
                });
            }
            
            nbrStudentField.setText(String.valueOf(students.size()));
            minGradeField.setText(String.valueOf(minGrade));
            maxGradesField.setText(String.valueOf(maxGrade));
            if (!students.isEmpty()){
             averageGradeField.setText(String.valueOf(totalGrades/students.size()));
                    }else{
                averageGradeField.setText("0");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des étudiants: " + e.getMessage(),
                                          "Fetch Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    
   private double calculateAverageGrade(Student student) {
        double total = 0;
        double weightSum = 0;
        for (Grade grade : student.getGrades()) {
            total += grade.getGrade() * grade.getCoef();
            weightSum += grade.getCoef();
        }
        return weightSum > 0 ? total / weightSum : 0;
    }  
    
    
    
    private DefaultTableModel studentTableModel;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentButton;
    private javax.swing.JTextField averageGradeField;
    private javax.swing.JLabel averageGradeLabel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel comboPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> listClassromCombo;
    private javax.swing.JTextField maxGradesField;
    private javax.swing.JLabel maxGradesLabel;
    private javax.swing.JLabel minAverageLabel;
    private javax.swing.JTextField minGradeField;
    private javax.swing.JTextField nbrStudentField;
    private javax.swing.JLabel nbrStudentLabel;
    private javax.swing.JLabel selectionLabel;
    private javax.swing.JPanel studentListPanel;
    private javax.swing.JPanel studentSummayPanel;
    private javax.swing.JTable studentTable;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables
}
